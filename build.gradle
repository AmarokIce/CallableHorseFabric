plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = 'https://maven.parchmentmc.org' }
	maven { url = "https://mvn.devos.one/releases/" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
	maven {
		url "http://maven.snowlyicewolf.club/"
		allowInsecureProtocol = true
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		it.parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
		it.officialMojangMappings { nameSyntheticMembers = false }
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:core:2.3.0+1.20.1"))

	modImplementation "club.someoneice.pc:pineapple-coffee:0.1.1"

	modLocalRuntime("com.terraformersmc:modmenu:7.0.0") { exclude group: "net.fabricmc"; exclude group: "net.fabricmc.fabric-api" }
	modLocalRuntime "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE.txt") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}